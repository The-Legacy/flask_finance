name: Build and Release Executables

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: flask-finance-linux
            asset_name: flask-finance-linux-x64
          - os: windows-latest
            artifact_name: flask-finance-windows.exe
            asset_name: flask-finance-windows-x64.exe
          - os: macos-latest
            artifact_name: flask-finance-macos
            asset_name: flask-finance-macos-x64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        echo "Dependencies installed successfully"

    - name: Test Flask app import
      run: |
        python -c "import app; print('Flask app imports successfully')"

    - name: Create executable with PyInstaller (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        echo "Starting PyInstaller build for ${{ matrix.artifact_name }}..."
        pyinstaller --onefile --name ${{ matrix.artifact_name }} \
          --add-data "templates:templates" \
          --add-data "static:static" \
          --hidden-import flask \
          --hidden-import sqlalchemy \
          --hidden-import werkzeug \
          --hidden-import jinja2 \
          --hidden-import models.transaction \
          --hidden-import models.loan \
          --hidden-import models.investment \
          --hidden-import models.account \
          --hidden-import models.budget \
          --hidden-import database \
          app.py
        echo "PyInstaller build completed"
        ls -la dist/

    - name: Create executable with PyInstaller (Windows)
      if: runner.os == 'Windows'
      shell: cmd
      run: |
        echo Starting PyInstaller build for ${{ matrix.artifact_name }}...
        pyinstaller --onefile --name ${{ matrix.artifact_name }} ^
          --add-data "templates;templates" ^
          --add-data "static;static" ^
          --hidden-import flask ^
          --hidden-import sqlalchemy ^
          --hidden-import werkzeug ^
          --hidden-import jinja2 ^
          --hidden-import models.transaction ^
          --hidden-import models.loan ^
          --hidden-import models.investment ^
          --hidden-import models.account ^
          --hidden-import models.budget ^
          --hidden-import database ^
          app.py
        echo PyInstaller build completed
        dir dist

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: dist/${{ matrix.artifact_name }}*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release and Upload Assets
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: Flask Finance v${{ github.ref_name }}
        draft: false
        prerelease: false
        body: |
          ## Flask Finance Release ${{ github.ref_name }}
          
          ### Download the executable for your platform:
          
          - **Windows**: Download `flask-finance-windows-x64.exe`
          - **Linux**: Download `flask-finance-linux-x64`
          - **macOS**: Download `flask-finance-macos-x64`
          
          ### How to run:
          
          1. Download the appropriate executable for your operating system
          2. Make it executable (Linux/macOS): `chmod +x flask-finance-*`
          3. Run the executable
          4. Open your web browser and go to `http://localhost:5000`
          
          ### Features:
          - Personal finance tracking
          - Account management and reconciliation
          - Transaction tracking
          - Investment portfolio management
          - Loan and debt tracking
          - Budget planning
          
          ---
          
          **Note**: The executable includes all dependencies and templates. No Python installation required!
        files: |
          flask-finance-linux-x64/flask-finance-linux
          flask-finance-windows-x64.exe/flask-finance-windows.exe
          flask-finance-macos-x64/flask-finance-macos
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
