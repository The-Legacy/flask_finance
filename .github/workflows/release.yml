name: Build and Release Executables

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: flask-finance-linux
            asset_name: flask-finance-linux-x64
          - os: windows-latest
            artifact_name: flask-finance-windows.exe
            asset_name: flask-finance-windows-x64.exe
          - os: macos-latest
            artifact_name: flask-finance-macos
            asset_name: flask-finance-macos-x64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        echo "Dependencies installed successfully"

    - name: Test Flask app import
      run: |
        python -c "import app; print('Flask app imports successfully')"

    - name: Create executable with PyInstaller (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        echo "Starting PyInstaller build for ${{ matrix.artifact_name }}..."
        pyinstaller --onefile --name ${{ matrix.artifact_name }} \
          --add-data "templates:templates" \
          --add-data "static:static" \
          --hidden-import flask \
          --hidden-import sqlalchemy \
          --hidden-import werkzeug \
          --hidden-import jinja2 \
          --hidden-import models.transaction \
          --hidden-import models.loan \
          --hidden-import models.investment \
          --hidden-import models.account \
          --hidden-import models.budget \
          --hidden-import database \
          app.py
        echo "PyInstaller build completed"
        ls -la dist/

    - name: Create executable with PyInstaller (Windows)
      if: runner.os == 'Windows'
      shell: cmd
      run: |
        echo Starting PyInstaller build for ${{ matrix.artifact_name }}...
        pyinstaller --onefile --name ${{ matrix.artifact_name }} ^
          --add-data "templates;templates" ^
          --add-data "static;static" ^
          --hidden-import flask ^
          --hidden-import sqlalchemy ^
          --hidden-import werkzeug ^
          --hidden-import jinja2 ^
          --hidden-import models.transaction ^
          --hidden-import models.loan ^
          --hidden-import models.investment ^
          --hidden-import models.account ^
          --hidden-import models.budget ^
          --hidden-import database ^
          app.py
        echo PyInstaller build completed
        dir dist

    - name: Create README for release
      run: |
        cat > README-RELEASE.txt << 'EOF'
        Flask Finance - Personal Finance Tracker
        ========================================
        
        Thank you for downloading Flask Finance!
        
        QUICK START:
        -----------
        1. Extract this ZIP file to a folder of your choice
        2. Run the executable file:
           - Windows: Double-click flask-finance-windows.exe
           - Linux/macOS: Open terminal, navigate to folder, run ./flask-finance-*
        3. Open your web browser and go to: http://localhost:5000
        4. Start tracking your finances!
        
        FEATURES:
        --------
        • Transaction tracking (income & expenses)
        • Account management and reconciliation
        • Investment portfolio tracking
        • Loan and debt management
        • Budget planning and analysis
        • Tax calculations
        
        NOTES:
        -----
        • No Python installation required - this is a standalone executable
        • Your data is stored locally in a SQLite database
        • The app runs on your computer - no internet connection needed
        • To stop the app, close the terminal/command prompt or press Ctrl+C
        
        SUPPORT:
        -------
        For issues, questions, or feature requests, please visit:
        https://github.com/The-Legacy/flask_finance
        
        EOF

    - name: Package executable into ZIP (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        cd dist
        cp ../README-RELEASE.txt .
        zip -r ${{ matrix.asset_name }}.zip ${{ matrix.artifact_name }} README-RELEASE.txt
        ls -la *.zip

    - name: Package executable into ZIP (Windows)
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        cd dist
        copy ..\README-RELEASE.txt .
        Compress-Archive -Path ${{ matrix.artifact_name }}, README-RELEASE.txt -DestinationPath ${{ matrix.asset_name }}.zip
        dir *.zip

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: dist/${{ matrix.asset_name }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release and Upload Assets
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: Flask Finance v${{ github.ref_name }}
        draft: false
        prerelease: false
        body: |
          ## Flask Finance Release ${{ github.ref_name }}
          
          ### Download and Installation:
          
          1. **Download the ZIP file for your platform:**
             - **Windows**: `flask-finance-windows-x64.exe.zip`
             - **Linux**: `flask-finance-linux-x64.zip`
             - **macOS**: `flask-finance-macos-x64.zip`
          
          2. **Extract the ZIP file** to a folder of your choice
          
          3. **Run the executable:**
             - **Windows**: Double-click `flask-finance-windows.exe`
             - **Linux/macOS**: Open terminal, navigate to the extracted folder, and run `./flask-finance-*`
             
          4. **Open your web browser** and go to `http://localhost:5000`
          
          ### Features:
          - 💰 Transaction tracking (income & expenses with tax categorization)
          - 🏦 Account management and reconciliation
          - 📈 Investment portfolio tracking
          - 💳 Loan and debt management
          - 📊 Budget planning and analysis with time frame support
          - 🧾 Tax calculations and projections
          
          ### What's Included:
          - Standalone executable (no Python installation required)
          - All templates and static files bundled
          - README with installation instructions
          - SQLite database for local data storage
          
          ---
          
          **Note**: Your financial data stays on your computer - no cloud sync or internet connection required!
        files: |
          flask-finance-linux-x64/flask-finance-linux-x64.zip
          flask-finance-windows-x64.exe/flask-finance-windows-x64.exe.zip
          flask-finance-macos-x64/flask-finance-macos-x64.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
